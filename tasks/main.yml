---

- name: Migrate directory to mount
  block:
    - name: Check directories
      ansible.builtin.stat:
        path: "{{ migrate_to_mount_item.mount.path }}"
      register: migrate_to_mount_check_dirs_result
      loop: "{{ migrate_to_mount }}"
      loop_control:
        loop_var: migrate_to_mount_item
        label: "{{ migrate_to_mount_item.mount.path }}"

    - name: Check save directories
      ansible.builtin.stat:
        path: >-
          {{ migrate_to_mount_item.mount.path
             + "."
             + migrate_to_mount_save_suffix }}
      register:  migrate_to_mount_check_save_dirs_result
      loop: "{{ migrate_to_mount }}"
      loop_control:
        loop_var: migrate_to_mount_item
        label: "{{ migrate_to_mount_item.mount.path }}"

    - name: Migrate directories
      when: >-
        migrate_to_mount_item.mount.path not in ansible_facts.mounts
                                                | map(attribute="mount")
                                                | list
        or migrate_to_mount_check_save_dirs_result.results
           [migrate_to_mount_index].stat.exists
      block:
        - name: Stop standard services
          ansible.builtin.service:
            name: "{{ migrate_to_mount_item.service.name }}"
            state: stopped
          register: migrate_to_mount_stop_internal_result
          failed_when:
            - migrate_to_mount_stop_internal_result.msg is defined
            - >-
              migrate_to_mount_stop_internal_result.msg
              is not search("Could not find")
          loop: >-
            {{ migrate_to_mount
               | selectattr("service", "defined")
               | selectattr("service.name", "defined")
               | selectattr("service.stop_command", "undefined")
               | list }}
          loop_control:
            loop_var: migrate_to_mount_item
            index_var: migrate_to_mount_index
            label: >-
              {{ migrate_to_mount_item.mount.path }}
              {{ migrate_to_mount_item.service.name }}

        - name: Stop services with external commands
          ansible.builtin.command: >-
            {{ migrate_to_mount_item.service.stop_ansible.builtin.command }}
          register: migrate_to_mount_stop_external_result
          failed_when: migrate_to_mount_item.service.stop_command_failed_when
          changed_when: yes
          loop: >-
            {{ migrate_to_mount
               | selectattr("service", "defined")
               | selectattr("service.stop_command", "defined")
               | list }}
          loop_control:
            loop_var: migrate_to_mount_item
            index_var: migrate_to_mount_index
            label: "{{ migrate_to_mount_item.mount.path }}"

        - name: Save directories
          ansible.builtin.command: >-
            mv
            {{ migrate_to_mount_item.mount.path }}
            {{ migrate_to_mount_item.mount.path
              + "."
              + migrate_to_mount_save_suffix }}
          when:
            - >-
              migrate_to_mount_check_dirs_result.results
              [migrate_to_mount_index].stat.exists
            - >-
              not migrate_to_mount_check_save_dirs_result.results
              [migrate_to_mount_index].stat.exists
          register: migrate_to_mount_save_result
          loop: "{{ migrate_to_mount }}"
          loop_control:
            loop_var: migrate_to_mount_item
            index_var: migrate_to_mount_index
            label: "{{ migrate_to_mount_item.mount.path }}"

        - name: Mount directories
          ansible.builtin.include_role:
            name: amtega.mounts
          loop: "{{ migrate_to_mount }}"
          loop_control:
            loop_var: migrate_to_mount_item
            index_var: migrate_to_mount_index
            label: "{{ migrate_to_mount_item.mount.path }}"
          vars:
            mounts_load_from_hostvars: no
            mounts:
              - >-
                {{ migrate_to_mount_item.mount
                   | combine({"state": "mounted"}) }}
            mounts_create_paths: yes

        - name: Restore saved directories
          ansible.builtin.shell: >-
            shopt -s dotglob ; \
            if [ "$( ls -A {{ migrate_to_mount_item.mount.path
                       + '.'
                       + migrate_to_mount_save_suffix }} )" ]; then \
            mv {{ migrate_to_mount_item.mount.path
                  + "."
                  + migrate_to_mount_save_suffix }}/* \
            {{ migrate_to_mount_item.mount.path }} ; \
            else echo "dir empty"; \
            fi
          args:
            warn: no
          when: >-
            migrate_to_mount_save_result.results[migrate_to_mount_index]
            is changed
            or migrate_to_mount_check_save_dirs_result.results
               [migrate_to_mount_index].stat.exists
          loop: "{{ migrate_to_mount }}"
          loop_control:
            loop_var: migrate_to_mount_item
            index_var: migrate_to_mount_index
            label: "{{ migrate_to_mount_item.mount.path }}"

        - name: Remove saved directories
          ansible.builtin.file:
            path: >-
              {{ migrate_to_mount_item.mount.path
                 + "."
                 + migrate_to_mount_save_suffix }}
            state: absent
          loop: "{{ migrate_to_mount }}"
          loop_control:
            loop_var: migrate_to_mount_item
            index_var: migrate_to_mount_index
            label: "{{ migrate_to_mount_item.mount.path }}"

        - name: Start standard services
          ansible.builtin.service:
            name: "{{ migrate_to_mount_item.service.name }}"
            state: started
          register: migrate_to_mount_start_internal_result
          failed_when:
            - migrate_to_mount_start_internal_result.msg is defined
            - >-
              migrate_to_mount_start_internal_result.msg
              is not search("Could not find")
          loop: >-
            {{ migrate_to_mount
               | selectattr("service", "defined")
               | selectattr("service.name", "defined")
               | selectattr("service.start_command", "undefined")
               | list }}
          loop_control:
            loop_var: migrate_to_mount_item
            index_var: migrate_to_mount_index
            label: >-
              {{ migrate_to_mount_item.mount.path }}
              {{ migrate_to_mount_item.service.name }}

        - name: Start services with external commands
          ansible.builtin.command: >-
            {{ migrate_to_mount_item.service.start_ansible.builtin.command }}
          register: migrate_to_mount_start_external_result
          failed_when: >-
            migrate_to_mount_ greitem.service.start_command_failed_when
          changed_when: yes
          loop: >-
            {{ migrate_to_mount
               | selectattr("service.sart_command", "defined")
               | list }}
          loop_control:
            loop_var: migrate_to_mount_item
            index_var: migrate_to_mount_index
            label: "{{ migrate_to_mount_item.mount.path }}"
  vars:
    migrate_to_mount_stop_result_placeholder:
      msg: ""
      rc: 0
      stderr: ""
      stderr_lines: []
      stdout: ""
      stdout_lines: []

    migrate_to_mount_start_result_placeholder:
      msg: ""
      rc: 0
      stderr: ""
      stderr_lines: []
      stdout: ""
      stdout_lines: []

    migrate_to_mount_stop_result: >-
      {{ (migrate_to_mount_stop_external_result is defined)
         | ternary(migrate_to_mount_stop_external_result.results
                   [migrate_to_mount_index] | default({}),
                   migrate_to_mount_stop_result_placeholder) }}

    migrate_to_mount_start_result: >-
      {{ (migrate_to_mount_start_external_result is defined)
         | ternary(migrate_to_mount_start_external_result.results
                   [migrate_to_mount_index] | default({}),
                   migrate_to_mount_stop_result_placeholder) }}

  tags:
    - role::migrate_to_mount
